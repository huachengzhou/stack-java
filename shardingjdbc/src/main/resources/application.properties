
server.port=8666

spring.application.name=shardJdbc


#包含哪些数据源
spring.shardingsphere.datasource.names=master,slave,slave-two

#指定谁是主库谁是从库，可以看到从库的属性是slave-data-source-names,表明支持多个从库
spring.shardingsphere.sharding.master-slave-rules.master.master-data-source-name=master
spring.shardingsphere.sharding.master-slave-rules.master.slave-data-source-names=slave,slave-two
sharding.jdbc.props.sql.show=true
# 指定同步延迟时间，单位为毫秒
spring.shardingsphere.props.maxDelayTimeMilliseconds=10000
#多数据源配置
#主数据库配置 配置一个
spring.shardingsphere.datasource.master.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.master.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master.jdbc-url=jdbc:mysql://localhost:3306/shard-jdbc-master?serverTimezone=UTC&characterEncoding=utf8&useUnicode=true&useSSL=false
spring.shardingsphere.datasource.master.username=root
spring.shardingsphere.datasource.master.password=123456

#从数据库配置 一共配置2个
spring.shardingsphere.datasource.slave.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave.jdbc-url=jdbc:mysql://localhost:3306/shard-jdbc-slave?serverTimezone=UTC&characterEncoding=utf8&useUnicode=true&useSSL=false
spring.shardingsphere.datasource.slave.username=root
spring.shardingsphere.datasource.slave.password=123456
# 指定同步延迟时间，单位为秒
spring.shardingsphere.datasource.slave.synchronizationDelay=2

spring.shardingsphere.datasource.slave-two.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave-two.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave-two.jdbc-url=jdbc:mysql://localhost:3307/shard-jdbc-slave?serverTimezone=UTC&characterEncoding=utf8&useUnicode=true&useSSL=false
spring.shardingsphere.datasource.slave-two.username=root
spring.shardingsphere.datasource.slave-two.password=123456
# 指定同步延迟时间，单位为秒
spring.shardingsphere.datasource.slave-two.synchronizationDelay=2

# ⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐ 【配置分库策略】

##    shard 数据库分片键 : id
spring.shardingsphere.sharding.tables.shard.database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.shard.database-strategy.inline.algorithm-expression=ds$->{id % 2}



# ⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐ 【指定ID生成策略】
spring.shardingsphere.sharding.tables.shard.key-generator.column=id
spring.shardingsphere.sharding.tables.shard.key-generator.type=SNOWFLAKE
#小于 1024 即可
spring.shardingsphere.sharding.tables.shard.key-generator.props.worker.id=1000
# 最大容忍的时钟回拨毫秒数
spring.shardingsphere.sharding.tables.shard.key-generator.props.max.tolerate.time.difference.milliseconds=5

# ⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐ 读写分离的负载均衡策略配置
#spring.shardingsphere.rules[0].name=master-slave
spring.shardingsphere.rules[0].name=master
spring.shardingsphere.rules[0].masterDataSourceName=master
spring.shardingsphere.rules[0].slaveDataSourceNames[0]=slave
spring.shardingsphere.rules[0].slaveDataSourceNames[1]=slave-two
spring.shardingsphere.rules[0].loadBalanceAlgorithmType=ROUND_ROBIN

# 开启mybatis-plus的日志，方便查看sql语句的执行
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis.mapper-locations=classpath:mapper/*.xml












